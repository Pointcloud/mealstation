#!/usr/bin/env python

import sys
import rospy # pylint: disable=import-error
from std_msgs.msg import String # pylint: disable=import-error
from std_msgs.msg import Int32 # pylint: disable=import-error
from frystation.msg import JointPose # pylint: disable=import-error
from frystation.srv import GetJointPose # pylint: disable=import-error
from frystation.msg import SyncWriteItem # pylint: disable=import-error
from robotis_controller_msgs.msg import StatusMsg # pylint: disable=import-error

def set_joint_pose(clockwise):
  #determine the current joint positions
  rospy.wait_for_service('/robotis/base/get_joint_pose')
  try:
    move_joint = rospy.ServiceProxy('/robotis/base/get_joint_pose', GetJointPose)
    responseJointPose = move_joint(["joint1", "joint2", "joint3","joint4","joint5","joint6"])
  except:
    print("Service call failed")
    exit(-1)
  print(responseJointPose)

if __name__ == "__main__":
  keyboard_input = input ("Press 1 to move Joint 1 clockwise, ! for counter clockwise")
  if keyboard_input == "1":
    set_joint_pose(True)
  elif keyboard_input == "!":
    set_joint_pose(False)
  else:
    print(keyboard_input)
    set_joint_pose(False)
    pass


