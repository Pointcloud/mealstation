#!/usr/bin/env python

import time
import rospy # pylint: disable=import-error
from std_msgs.msg import Int32 # pylint: disable=import-error
from frystation.msg import SyncWriteItem # pylint: disable=import-error
from robotis_controller_msgs.msg import StatusMsg # pylint: disable=import-error

def gripper_enable_torque(enabled):
	msg = SyncWriteItem()
	msg.item_name = "torque_enable"
	msg.joint_name = ["gripper"]
	msg.value =[enabled]
	pubGripperControl.publish(msg)

def handle_gripper_set_position(position):
	msg = SyncWriteItem()
	msg.item_name = "goal_position"
	msg.joint_name = ["gripper"]
	msg.value =[position]
	pubGripperPosition.publish(msg)

def gripper_move_server():
	rospy.init_node('gripper_move_server')
	s = rospy.Service('gripper_set_position', Int32, handle_gripper_set_position)
	print("Ready to handle gripper move commands")
	rospy.spin()

if __name__ == "__main__":

	#setup publisher to send gripper control commands
	pubGripperControl = rospy.Publisher('/robotis/sync_write_item',SyncWriteItem, queue_size=1)

	#setup publisher to send gripper position commands
	pubGripperPosition = rospy.Publisher('/robotis/direct/sync_write_item',SyncWriteItem, queue_size=1)
	time.sleep(1) 

	#enable gripper
	gripper_enable_torque(True)
	time.sleep(1) 

	gripper_move_server() 
