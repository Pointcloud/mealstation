#!/usr/bin/env python

#This is the file with the instructions to make fries
#proof of concept 

import rospy # pylint: disable=import-error
import time
from std_msgs.msg import String  # pylint: disable=import-error
from std_msgs.msg import Int32  # pylint: disable=import-error
from frystation.msg import SyncWriteItem  # pylint: disable=import-error
from robotis_controller_msgs.msg import StatusMsg  # pylint: disable=import-error

def gripper_set_position(position):
	msg = SyncWriteItem()
	msg.item_name = "goal_position"
	msg.joint_name = ["gripper"]
	msg.value =[position]
	pubGripperPosition.publish(msg)

def gripper_enable_torque(enabled):
	msg = SyncWriteItem()
	msg.item_name = "torque_enable"
	msg.joint_name = ["gripper"]
	msg.value =[enabled]
	pubGripperControl.publish(msg)


def make_Fries():

	################################################################
	######################### Make Frys ############################
	################################################################

	#enable gripper
	gripper_enable_torque(True)
	time.sleep(1) 
	

	#set gripper to fully closed
	gripper_set_position(740)
	time.sleep(1) 

	#set gripper to fully open
	gripper_set_position(0)


if __name__=='__main__':
	try:
		
		#create the ROS node for the application	
		rospy.init_node('frymaker')

		#setup publisher to send gripper control commands
		pubGripperControl = rospy.Publisher('/robotis/sync_write_item',SyncWriteItem, queue_size=1)

		#setup publisher to send gripper position commands
		pubGripperPosition = rospy.Publisher('/robotis/direct/sync_write_item',SyncWriteItem, queue_size=1)

		#run the main application
		make_Fries()
		
	except rospy.ROSInterruptException:
		pass
